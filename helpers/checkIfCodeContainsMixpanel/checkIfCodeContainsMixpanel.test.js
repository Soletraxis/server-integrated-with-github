const checkIfCodeContainsMixpanel = require("./checkIfCodeContainsMixpanel");
let sampleFileWithMixpanel;
let sampleFileWithoutMixpanel;
beforeAll(() => {
  sampleFileWithMixpanel =
    "[Ll]ibrary/\n" +
    "[Tt]emp/\n" +
    "[Oo]bj/\n" +
    "[Bb]uild/\n" +
    "[Bb]uilds/\n" +
    "Assets/AssetStoreTools*\n" +
    "MiXpAnEl\n" +
    "\n" +
    "# Visual Studio cache directory\n" +
    ".vs/\n" +
    "\n" +
    "# Autogenerated VS/MD/Consulo solution and project files\n" +
    "ExportedObj/\n" +
    ".consulo/\n" +
    "*.csproj\n" +
    "*.unityproj\n" +
    "*.sln\n" +
    "*.suo\n" +
    "*.tmp\n" +
    "*.user\n" +
    "*.userprefs\n" +
    "*.pidb\n" +
    "*.booproj\n" +
    "*.svd\n" +
    "*.pdb\n" +
    "*.opendb\n" +
    "\n" +
    "# Unity3D generated meta files\n" +
    "*.pidb.meta\n" +
    "*.pdb.meta\n" +
    "\n" +
    "# Unity3D Generated File On Crash Reports\n" +
    "sysinfo.txt\n" +
    "\n" +
    "# Builds\n" +
    "*.apk\n" +
    "*.unitypackage\n";
  sampleFileWithoutMixpanel =
    "[Ll]ibrary/\n" +
    "[Tt]emp/\n" +
    "[Oo]bj/\n" +
    "[Bb]uild/\n" +
    "[Bb]uilds/\n" +
    "Assets/AssetStoreTools*\n" +
    "\n" +
    "# Visual Studio cache directory\n" +
    ".vs/\n" +
    "\n" +
    "# Autogenerated VS/MD/Consulo solution and project files\n" +
    "ExportedObj/\n" +
    ".consulo/\n" +
    "*.csproj\n" +
    "*.unityproj\n" +
    "*.sln\n" +
    "*.suo\n" +
    "*.tmp\n" +
    "*.user\n" +
    "*.userprefs\n" +
    "*.pidb\n" +
    "*.booproj\n" +
    "*.svd\n" +
    "*.pdb\n" +
    "*.opendb\n" +
    "\n" +
    "# Unity3D generated meta files\n" +
    "*.pidb.meta\n" +
    "*.pdb.meta\n" +
    "\n" +
    "# Unity3D Generated File On Crash Reports\n" +
    "sysinfo.txt\n" +
    "\n" +
    "# Builds\n" +
    "*.apk\n" +
    "*.unitypackage\n";
});
test("checkIfCodeContainsMixpanel should return true", () => {
  expect(checkIfCodeContainsMixpanel(sampleFileWithMixpanel)).toEqual(true);
});
test("checkIfCodeContainsMixpanel should return true", () => {
  expect(checkIfCodeContainsMixpanel(sampleFileWithoutMixpanel)).toEqual(false);
});
